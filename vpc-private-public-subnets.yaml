Description: Vini EKS Cluster VPC

Parameters:

    Proj:
        Type: String

    Env:
        Type: String

    VpcBlock:
        Type: String
        Default: 10.10.0.0/16
        Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.
    
    PublicSubnet01Block:
        Type: String
        Default: 10.10.0.0/22
        Description: CidrBlock for public subnet 01 within the VPC
    
    PublicSubnet02Block:
        Type: String
        Default: 10.10.4.0/22
        Description: CidrBlock for public subnet 02 within the VPC

    PublicSubnet03Block:
        Type: String
        Default: 10.10.8.0/22
        Description: CidrBlock for public subnet 03 within the VPC
    
    # PrivateSubnet01Block:
    #     Type: String
    #     Default: 10.10.128.0/22
    #     Description: CidrBlock for private subnet 01 within the VPC
    
    # PrivateSubnet02Block:
    #     Type: String
    #     Default: 10.10.132.0/22
    #     Description: CidrBlock for private subnet 02 within the VPC

    # PrivateSubnet03Block:
    #     Type: String
    #     Default:  10.10.136.0/22
    #     Description: CidrBlock for private subnet 03 within the VPC

Resources:

    VPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcBlock
            EnableDnsHostnames: true
            Tags: 
              - Key: Name 
                Value: !Sub ${Proj}-${Env}-vpc

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
              - Key: Name
                Value: !Sub ${Proj}-${Env}-inet-gateway

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

#== Route Tables ==#

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
              - Key: Name 
                Value: !Sub ${Proj}-${Env}-rt-public

    PublicRouteDefault:
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    # PrivateRouteTable:
    #     Type: AWS::EC2::RouteTable
    #     Properties:
    #         VpcId: !Ref VPC
    #         Tags:
    #           - Key: Name 
    #             Value: !Sub ${Proj}-${Env}-rt-private

    # PrivateRouteDefault:
    #     Type: AWS::EC2::Route
    #     Properties:
    #         RouteTableId: !Ref PrivateRouteTable
    #         DestinationCidrBlock: 0.0.0.0/0
    #         NatGatewayId: !Ref NatGateway

    
    #== Public Subnets ==#

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [0, !GetAZs '']
            CidrBlock: !Ref PublicSubnet01Block
            MapPublicIpOnLaunch: true
            Tags:
              - Key: Name 
                Value: !Sub ${Proj}-${Env}-public-subnet-1
              - Key: kubernetes.io/role/elb
                Value: 1

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [1, !GetAZs '']
            CidrBlock: !Ref PublicSubnet02Block
            MapPublicIpOnLaunch: true
            Tags:
              - Key: Name 
                Value: !Sub ${Proj}-${Env}-public-subnet-2
              - Key: kubernetes.io/role/elb
                Value: 1

    PublicSubnet3:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [2, !GetAZs '']
            CidrBlock: !Ref PublicSubnet03Block
            MapPublicIpOnLaunch: true
            Tags:
              - Key: Name 
                Value: !Sub ${Proj}-${Env}-public-subnet-3
              - Key: kubernetes.io/role/elb
                Value: 1

    #== Private Subnets ==#

    # PrivateSubnet1:
    #     Type: AWS::EC2::Subnet
    #     Properties:
    #         VpcId: !Ref VPC
    #         AvailabilityZone: !Select [0, !GetAZs '']
    #         CidrBlock: !Ref PrivateSubnet01Block
    #         MapPublicIpOnLaunch: false
    #         Tags:
    #           - Key: Name 
    #             Value: !Sub ${Proj}-${Env}-private-subnet-1
    #           - Key: kubernetes.io/role/internal-elb
    #             Value: 1

    # PrivateSubnet2:
    #     Type: AWS::EC2::Subnet
    #     Properties:
    #         VpcId: !Ref VPC
    #         AvailabilityZone: !Select [1, !GetAZs '']
    #         CidrBlock: !Ref PrivateSubnet02Block
    #         MapPublicIpOnLaunch: false
    #         Tags:
    #           - Key: Name 
    #             Value: !Sub ${Proj}-${Env}-private-subnet-2
    #           - Key: kubernetes.io/role/internal-elb
    #             Value: 1                

    # PrivateSubnet3:
    #     Type: AWS::EC2::Subnet
    #     Properties:
    #         VpcId: !Ref VPC
    #         AvailabilityZone: !Select [2, !GetAZs '']
    #         CidrBlock: !Ref PrivateSubnet03Block
    #         MapPublicIpOnLaunch: false
    #         Tags:
    #           - Key: Name 
    #             Value: !Sub ${Proj}-${Env}-private-subnet-3
    #           - Key: kubernetes.io/role/internal-elb
    #             Value: 1                

    
    #== Subnet Associations ==#

    PublicSubnet1Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    PublicSubnet3Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet3

    # PrivateSubnet1Association:
    #     Type: AWS::EC2::SubnetRouteTableAssociation
    #     Properties:
    #         RouteTableId: !Ref PrivateRouteTable
    #         SubnetId: !Ref PrivateSubnet1

    # PrivateSubnet2Association:
    #     Type: AWS::EC2::SubnetRouteTableAssociation
    #     Properties:
    #         RouteTableId: !Ref PrivateRouteTable
    #         SubnetId: !Ref PrivateSubnet2

    # PrivateSubnet3Association:
    #     Type: AWS::EC2::SubnetRouteTableAssociation
    #     Properties:
    #         RouteTableId: !Ref PrivateRouteTable
    #         SubnetId: !Ref PrivateSubnet3

Outputs:

    VPC:
        Description: VPC ID
        Value: !Ref VPC
        Export:
            Name: !Sub ${Proj}-${Env}-vpc-id

    VpcBlock:
        Description: VPC Block
        Value: !Ref VpcBlock
        Export:
            Name: !Sub ${Proj}-${Env}-vpc-block

    PublicSubnets:
        Description: Public Subnet List
        Value: !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3]]
        Export:
            Name: !Sub ${Proj}-${Env}-vpc-public-subnets

    # PrivateSubnets:
    #     Description: Private Subnet List
    #     Value: !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3]]
    #     Export:
    #         Name: !Sub ${Proj}-${Env}-vpc-private-subnets